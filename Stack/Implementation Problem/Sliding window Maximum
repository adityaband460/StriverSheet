// store indices in deque to handle duplicates
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        deque<int>dq;
        vector<int>ans;
        int n = nums.size();
        for(int i=0;i<k;i++)
        { 
            while(!dq.empty() && nums[dq.back()] <= nums[i])
            {
                dq.pop_back();
            }
            dq.push_back(i);
        }
        ans.push_back(nums[dq.front()]);
        for(int j=k; j < n;j++)
        {
            // remove j-k  = i th element
            if(dq.front() == j-k)
                dq.pop_front();

            // process j the element
            while(!dq.empty() && nums[dq.back()] <= nums[j])
            {
                dq.pop_back();
            }
            dq.push_back(j);
            
            ans.push_back(nums[dq.front()]);
        }
        return ans;
    }
