class Solution {
public:
    int lowerBound(vector<int>&arr,int x)
    {
        int i = 0;
        int j = arr.size() -1;
        int lbindex = -1;
        while(i<=j)
        {
            int mid = (i+j)/2;
            if(arr[mid] == x)
            {
                lbindex = mid;
                return mid;
            }
            else if(arr[mid] < x)
            {
                i = mid+1;    
            }
            else
            {
                lbindex = mid;
                j = mid-1;
            }
        }
        return lbindex;
    }
    int lengthOfLIS(vector<int>& nums) {
        vector<int>tempSeq;
        tempSeq.push_back(nums[0]);
        int size = 1;
        for(int i=1;i<nums.size();i++)
        {
            if(tempSeq.back() < nums[i])
            {
                tempSeq.push_back(nums[i]);
                size++;
            }
            else
            {
                int index =  lowerBound(tempSeq,nums[i]);
                // int index = itr-tempSeq.begin();
                tempSeq[index] = nums[i];
            }
        }
        return size;
    }
};
