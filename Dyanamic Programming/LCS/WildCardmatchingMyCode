class Solution {
public:
    bool solve(int n,int m,string &s,string &p,vector<vector<int>>&dp)
    {
        if(n>0 && m>0 && dp[n][m] != -1) return dp[n][m];
        if(n==0 && m==0)return true;
        // s="" , p="***"

        if(m > 0 && p[m-1]=='*')
        {
            bool ans = false;
            for(int i=n;i>=0;i--)
            {
                ans = ans || solve(i,m-1,s,p,dp);
            }
            return dp[n][m] = ans;
        }
        // last char is not '*'
        // ex : s="" , p="a"
        if(n==0 && m > 0)return false;
        if(n >0 && m==0) return false;

        if(s[n-1] == p[m-1]) return dp[n][m] = solve(n-1,m-1,s,p,dp);
        if(p[m-1] == '?') return dp[n][m] = solve(n-1,m-1,s,p,dp);

    return false;
    }
    bool isMatch(string s, string p) {
          int n = s.length();
          int m = p.length();
          vector<vector<int>>dp(n+1,vector<int>(m+1,-1));
          return solve(n,m,s,p,dp);
    }
};
