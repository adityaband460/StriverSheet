class Solution {
public:
    int numberOfSubarrays(vector<int>& nums, int k) {
        
        int i=0 , j=0;
        int ans = 0;
        int curSum = 0;
        // treat odd numbers as 1
        // even numbers as 0
        int n = nums.size();
        unordered_map<int,int>map;
        while(j < n)
        {
            if(nums[j]%2 == 1)
            {
                curSum += 1;
            }
            if(curSum == k)
            {
                ans += 1;
            }
            if( map.find(curSum - k) != map.end())
            {
                ans += map[curSum - k];
            }
            
            map[curSum]++;
            j++;
        }
        return ans;
    }
};
